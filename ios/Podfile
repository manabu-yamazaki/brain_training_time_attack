# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Abseilライブラリのバージョンを固定
  pod 'abseil', '1.20240722.0'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # 全体的なC++設定
      config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
      config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
      
      # gRPC-Coreの設定
      if target.name == 'gRPC-Core'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -DGRPC_CFSTREAM=1 -DGRPC_CFSTREAM_RUN_LOOP=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = '$(inherited) GRPC_CFSTREAM=1 GRPC_CFSTREAM_RUN_LOOP=1'
      end
      
      # BoringSSL-GRPCの設定
      if target.name == 'BoringSSL-GRPC'
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'NO'
        config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-shorten-64-to-32 -Wno-comma -Wno-unreachable-code'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -Wno-shorten-64-to-32 -Wno-comma -Wno-unreachable-code'
        config.build_settings['GCC_WARN_64_TO_32_BIT_CONVERSION'] = 'NO'
        config.build_settings['GCC_WARN_ABOUT_RETURN_TYPE'] = 'NO'
        config.build_settings['GCC_WARN_UNUSED_FUNCTION'] = 'NO'
        config.build_settings['GCC_WARN_UNUSED_VARIABLE'] = 'NO'
      end
      
      # Abseilライブラリの設定
      if target.name == 'abseil'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -DABSL_USES_GOOGLE_MALLOC=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = '$(inherited) ABSL_USES_GOOGLE_MALLOC=1'
      end
      
      # gRPC-C++の設定
      if target.name == 'gRPC-C++'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '$(inherited) -DGRPC_CFSTREAM=1 -DGRPC_CFSTREAM_RUN_LOOP=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = '$(inherited) GRPC_CFSTREAM=1 GRPC_CFSTREAM_RUN_LOOP=1'
      end
    end
  end
end
